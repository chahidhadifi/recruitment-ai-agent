version: "3.8"

services:
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=fastapi_db
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fastapi_db
      - JWT_SECRET_KEY=your-secure-jwt-secret-key-for-production
    volumes:
      - ./backend/app:/app/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - recruitment-ai-network

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-docker-secret-key-change-in-production
    restart: unless-stopped
    networks:
      - recruitment-ai-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=fastapi_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - recruitment-ai-network

volumes:
  postgres_data:

networks:
  recruitment-ai-network:
    external: true
